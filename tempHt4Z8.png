%!PS-Adobe-2.0
%%Title: tempHt4Z8.png
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Sun Nov 18 03:03:34 2012
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (tempHt4Z8.png)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author ()
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Nov 18 03:03:34 2012)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
/Helvetica findfont 140 scalefont setfont
1.000 UL
LTb
770 448 M
63 0 V
6157 0 R
-63 0 V
686 448 M
( 10) Rshow
1.000 UL
LTb
770 1044 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 20) Rshow
1.000 UL
LTb
770 1640 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 30) Rshow
1.000 UL
LTb
770 2236 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 40) Rshow
1.000 UL
LTb
770 2832 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 50) Rshow
1.000 UL
LTb
770 3428 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 60) Rshow
1.000 UL
LTb
770 4024 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 70) Rshow
1.000 UL
LTb
770 4620 M
63 0 V
6157 0 R
-63 0 V
-6241 0 R
( 80) Rshow
1.000 UL
LTb
770 448 M
0 63 V
0 4109 R
0 -63 V
770 308 M
( 9.1e+08) Cshow
1.000 UL
LTb
1659 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 9.2e+08) Cshow
1.000 UL
LTb
2547 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 9.3e+08) Cshow
1.000 UL
LTb
3436 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 9.4e+08) Cshow
1.000 UL
LTb
4324 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 9.5e+08) Cshow
1.000 UL
LTb
5213 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 9.6e+08) Cshow
1.000 UL
LTb
6101 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 9.7e+08) Cshow
1.000 UL
LTb
6990 448 M
0 63 V
0 4109 R
0 -63 V
0 -4249 R
( 9.8e+08) Cshow
1.000 UL
LTb
1.000 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
LCb setrgbcolor
280 2534 M
currentpoint gsave translate 90 rotate 0 0 M
(data) Cshow
grestore
LTb
LCb setrgbcolor
3880 98 M
(time) Cshow
LTb
3880 4830 M
(AAPL) Cshow
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
LTb
6339 4487 M
('_plot.in') Rshow
LT0
6423 4487 M
399 0 V
1252 1081 M
8 62 V
8 -47 V
7 97 V
8 0 V
23 26 V
8 8 V
8 11 V
7 -153 V
8 -2 V
31 -13 V
7 -9 V
8 -52 V
8 -2 V
23 18 V
7 34 V
8 -11 V
8 22 V
7 9 V
23 -7 V
8 -52 V
8 30 V
7 -69 V
8 -47 V
23 43 V
8 -17 V
8 34 V
7 39 V
8 -58 V
31 19 V
7 -39 V
8 -30 V
8 35 V
23 37 V
7 0 V
8 -29 V
8 -15 V
7 -64 V
23 -31 V
8 26 V
8 -13 V
7 -23 V
8 -7 V
23 35 V
8 -7 V
7 -47 V
8 -11 V
8 30 V
23 26 V
8 43 V
7 -43 V
8 43 V
8 -60 V
23 47 V
7 -62 V
8 21 V
8 4 V
7 -17 V
23 63 V
8 15 V
8 2 V
7 4 V
31 29 V
7 28 V
8 -26 V
8 -7 V
7 -4 V
24 -15 V
7 -48 V
8 27 V
8 6 V
7 -9 V
23 -47 V
8 6 V
8 9 V
7 60 V
8 84 V
23 52 V
8 143 V
7 -50 V
8 -32 V
8 90 V
23 106 V
7 -91 V
8 15 V
8 -75 V
7 41 V
23 -19 V
8 -14 V
8 52 V
8 -10 V
7 -54 V
23 0 V
8 26 V
8 -1 V
7 -80 V
8 42 V
23 -59 V
8 -13 V
7 76 V
8 -17 V
8 17 V
30 22 V
stroke 2388 1187 M
8 53 V
8 26 V
7 20 V
23 24 V
8 -37 V
8 22 V
7 -9 V
8 -50 V
23 -30 V
8 19 V
8 56 V
7 -47 V
8 22 V
23 -18 V
8 -34 V
7 -50 V
8 -41 V
8 -4 V
23 11 V
7 84 V
8 28 V
8 -30 V
7 30 V
31 32 V
8 74 V
7 138 V
8 34 V
23 -34 V
8 -24 V
7 67 V
8 -80 V
8 -6 V
23 41 V
8 -46 V
7 35 V
8 -50 V
8 28 V
23 -71 V
7 82 V
8 20 V
8 -15 V
7 54 V
23 2 V
8 -15 V
8 -42 V
7 28 V
8 -19 V
23 9 V
8 28 V
7 129 V
8 9 V
8 2 V
23 13 V
8 -6 V
7 -5 V
8 -41 V
8 13 V
23 46 V
7 -11 V
8 30 V
8 22 V
7 79 V
23 -81 V
8 95 V
8 101 V
7 58 V
8 87 V
31 86 V
7 -56 V
8 32 V
8 56 V
23 -73 V
7 84 V
8 -73 V
8 43 V
8 4 V
23 63 V
7 -292 V
8 31 V
8 -208 V
7 48 V
23 -108 V
8 -50 V
8 -17 V
7 127 V
8 -48 V
23 85 V
8 101 V
7 -23 V
8 -24 V
8 -24 V
23 33 V
7 30 V
8 -109 V
8 273 V
7 41 V
24 -39 V
7 -142 V
8 198 V
8 30 V
7 -66 V
23 17 V
8 17 V
8 39 V
stroke 3525 2128 M
7 45 V
8 67 V
23 -75 V
8 78 V
8 38 V
7 63 V
8 140 V
23 240 V
8 -201 V
7 54 V
8 24 V
8 -48 V
23 -36 V
7 52 V
8 -28 V
8 -18 V
8 84 V
23 -54 V
7 65 V
8 56 V
15 11 V
23 -15 V
8 99 V
8 154 V
7 213 V
8 143 V
23 30 V
8 54 V
7 -231 V
8 -144 V
8 -67 V
23 -119 V
7 -123 V
8 64 V
8 39 V
7 50 V
23 -60 V
8 135 V
8 -77 V
8 106 V
30 -124 V
8 -34 V
8 74 V
7 -11 V
8 75 V
23 272 V
8 -281 V
7 44 V
8 -268 V
8 134 V
23 -52 V
7 -149 V
8 -166 V
8 285 V
7 110 V
31 104 V
8 79 V
7 206 V
8 -65 V
23 -151 V
8 179 V
8 -61 V
7 -6 V
8 -250 V
23 64 V
8 -105 V
7 -42 V
8 134 V
8 139 V
23 181 V
7 24 V
8 -67 V
8 26 V
7 -141 V
23 210 V
8 95 V
8 -145 V
7 22 V
8 -108 V
31 77 V
8 72 V
7 -30 V
8 -145 V
23 86 V
8 41 V
7 467 V
8 -247 V
8 178 V
23 -69 V
7 -83 V
8 -26 V
8 7 V
7 104 V
23 -132 V
8 -210 V
8 59 V
7 159 V
8 102 V
23 -60 V
8 356 V
7 276 V
8 -86 V
8 -78 V
23 26 V
stroke 4692 4011 M
8 -13 V
7 -95 V
8 -304 V
8 300 V
22 -74 V
8 -179 V
8 91 V
7 -154 V
8 195 V
23 -201 V
8 -166 V
7 -303 V
8 136 V
8 -58 V
23 357 V
7 90 V
8 -171 V
8 -68 V
31 49 V
7 233 V
8 -209 V
8 162 V
7 -80 V
23 8 V
8 -192 V
8 -84 V
7 -131 V
8 73 V
23 -89 V
8 -140 V
7 -182 V
8 104 V
8 143 V
23 -197 V
7 139 V
8 -128 V
8 -19 V
7 -201 V
23 -121 V
8 -123 V
8 56 V
8 -12 V
7 -27 V
31 35 V
8 -106 V
7 153 V
8 102 V
23 -37 V
8 47 V
7 110 V
8 -53 V
8 28 V
23 -136 V
7 99 V
8 -121 V
8 58 V
7 -36 V
23 162 V
8 138 V
8 -1359 V
7 -56 V
8 -62 V
23 73 V
8 -71 V
8 80 V
7 -95 V
8 34 V
23 28 V
15 -51 V
8 6 V
8 78 V
23 80 V
7 -5 V
8 57 V
8 -70 V
7 35 V
23 19 V
8 -32 V
8 -136 V
7 73 V
8 -47 V
23 -145 V
8 41 V
7 0 V
8 58 V
8 -110 V
23 74 V
8 -44 V
7 -62 V
8 22 V
8 -18 V
23 17 V
7 -36 V
8 23 V
8 1 V
7 4 V
23 -19 V
8 -11 V
8 54 V
7 88 V
8 -43 V
23 15 V
8 35 V
7 79 V
stroke 5835 1471 M
8 54 V
8 20 V
23 37 V
8 34 V
7 9 V
8 43 V
8 74 V
30 -29 V
8 -120 V
8 107 V
7 -94 V
23 -13 V
8 -20 V
8 7 V
7 -33 V
8 -49 V
23 162 V
8 -22 V
7 34 V
8 -131 V
8 -134 V
23 39 V
7 -61 V
8 -75 V
8 136 V
8 -59 V
23 -90 V
7 -115 V
8 78 V
8 -93 V
7 7 V
23 -26 V
8 -52 V
8 -74 V
7 22 V
8 123 V
23 -34 V
8 -82 V
7 0 V
8 -70 V
8 33 V
23 52 V
7 -89 V
8 -22 V
8 0 V
7 3 V
24 45 V
8 15 V
7 56 V
8 108 V
8 -4 V
23 -48 V
7 -8 V
8 -74 V
8 7 V
7 -67 V
23 19 V
8 52 V
8 -22 V
7 -53 V
8 -29 V
23 26 V
8 -8 V
7 -18 V
16 48 V
23 -37 V
7 -39 V
8 -28 V
8 -64 V
8 34 V
23 -22 V
7 18 V
8 -160 V
8 0 V
7 45 V
23 7 V
8 11 V
8 -22 V
7 -34 V
8 -22 V
23 11 V
8 -15 V
7 23 V
8 -19 V
8 56 V
30 -19 V
8 8 V
8 0 V
7 4 V
1252 1081 Pls
1260 1143 Pls
1268 1096 Pls
1275 1193 Pls
1283 1193 Pls
1306 1219 Pls
1314 1227 Pls
1322 1238 Pls
1329 1085 Pls
1337 1083 Pls
1368 1070 Pls
1375 1061 Pls
1383 1009 Pls
1391 1007 Pls
1414 1025 Pls
1421 1059 Pls
1429 1048 Pls
1437 1070 Pls
1444 1079 Pls
1467 1072 Pls
1475 1020 Pls
1483 1050 Pls
1490 981 Pls
1498 934 Pls
1521 977 Pls
1529 960 Pls
1537 994 Pls
1544 1033 Pls
1552 975 Pls
1583 994 Pls
1590 955 Pls
1598 925 Pls
1606 960 Pls
1629 997 Pls
1636 997 Pls
1644 968 Pls
1652 953 Pls
1659 889 Pls
1682 858 Pls
1690 884 Pls
1698 871 Pls
1705 848 Pls
1713 841 Pls
1736 876 Pls
1744 869 Pls
1751 822 Pls
1759 811 Pls
1767 841 Pls
1790 867 Pls
1798 910 Pls
1805 867 Pls
1813 910 Pls
1821 850 Pls
1844 897 Pls
1851 835 Pls
1859 856 Pls
1867 860 Pls
1874 843 Pls
1897 906 Pls
1905 921 Pls
1913 923 Pls
1920 927 Pls
1951 956 Pls
1958 984 Pls
1966 958 Pls
1974 951 Pls
1981 947 Pls
2005 932 Pls
2012 884 Pls
2020 911 Pls
2028 917 Pls
2035 908 Pls
2058 861 Pls
2066 867 Pls
2074 876 Pls
2081 936 Pls
2089 1020 Pls
2112 1072 Pls
2120 1215 Pls
2127 1165 Pls
2135 1133 Pls
2143 1223 Pls
2166 1329 Pls
2173 1238 Pls
2181 1253 Pls
2189 1178 Pls
2196 1219 Pls
2219 1200 Pls
2227 1186 Pls
2235 1238 Pls
2243 1228 Pls
2250 1174 Pls
2273 1174 Pls
2281 1200 Pls
2289 1199 Pls
2296 1119 Pls
2304 1161 Pls
2327 1102 Pls
2335 1089 Pls
2342 1165 Pls
2350 1148 Pls
2358 1165 Pls
2388 1187 Pls
2396 1240 Pls
2404 1266 Pls
2411 1286 Pls
2434 1310 Pls
2442 1273 Pls
2450 1295 Pls
2457 1286 Pls
2465 1236 Pls
2488 1206 Pls
2496 1225 Pls
2504 1281 Pls
2511 1234 Pls
2519 1256 Pls
2542 1238 Pls
2550 1204 Pls
2557 1154 Pls
2565 1113 Pls
2573 1109 Pls
2596 1120 Pls
2603 1204 Pls
2611 1232 Pls
2619 1202 Pls
2626 1232 Pls
2657 1264 Pls
2665 1338 Pls
2672 1476 Pls
2680 1510 Pls
2703 1476 Pls
2711 1452 Pls
2718 1519 Pls
2726 1439 Pls
2734 1433 Pls
2757 1474 Pls
2765 1428 Pls
2772 1463 Pls
2780 1413 Pls
2788 1441 Pls
2811 1370 Pls
2818 1452 Pls
2826 1472 Pls
2834 1457 Pls
2841 1511 Pls
2864 1513 Pls
2872 1498 Pls
2880 1456 Pls
2887 1484 Pls
2895 1465 Pls
2918 1474 Pls
2926 1502 Pls
2933 1631 Pls
2941 1640 Pls
2949 1642 Pls
2972 1655 Pls
2980 1649 Pls
2987 1644 Pls
2995 1603 Pls
3003 1616 Pls
3026 1662 Pls
3033 1651 Pls
3041 1681 Pls
3049 1703 Pls
3056 1782 Pls
3079 1701 Pls
3087 1796 Pls
3095 1897 Pls
3102 1955 Pls
3110 2042 Pls
3141 2128 Pls
3148 2072 Pls
3156 2104 Pls
3164 2160 Pls
3187 2087 Pls
3194 2171 Pls
3202 2098 Pls
3210 2141 Pls
3218 2145 Pls
3241 2208 Pls
3248 1916 Pls
3256 1947 Pls
3264 1739 Pls
3271 1787 Pls
3294 1679 Pls
3302 1629 Pls
3310 1612 Pls
3317 1739 Pls
3325 1691 Pls
3348 1776 Pls
3356 1877 Pls
3363 1854 Pls
3371 1830 Pls
3379 1806 Pls
3402 1839 Pls
3409 1869 Pls
3417 1760 Pls
3425 2033 Pls
3432 2074 Pls
3456 2035 Pls
3463 1893 Pls
3471 2091 Pls
3479 2121 Pls
3486 2055 Pls
3509 2072 Pls
3517 2089 Pls
3525 2128 Pls
3532 2173 Pls
3540 2240 Pls
3563 2165 Pls
3571 2243 Pls
3579 2281 Pls
3586 2344 Pls
3594 2484 Pls
3617 2724 Pls
3625 2523 Pls
3632 2577 Pls
3640 2601 Pls
3648 2553 Pls
3671 2517 Pls
3678 2569 Pls
3686 2541 Pls
3694 2523 Pls
3702 2607 Pls
3725 2553 Pls
3732 2618 Pls
3740 2674 Pls
3755 2685 Pls
3778 2670 Pls
3786 2769 Pls
3794 2923 Pls
3801 3136 Pls
3809 3279 Pls
3832 3309 Pls
3840 3363 Pls
3847 3132 Pls
3855 2988 Pls
3863 2921 Pls
3886 2802 Pls
3893 2679 Pls
3901 2743 Pls
3909 2782 Pls
3916 2832 Pls
3939 2772 Pls
3947 2907 Pls
3955 2830 Pls
3963 2936 Pls
3993 2812 Pls
4001 2778 Pls
4009 2852 Pls
4016 2841 Pls
4024 2916 Pls
4047 3188 Pls
4055 2907 Pls
4062 2951 Pls
4070 2683 Pls
4078 2817 Pls
4101 2765 Pls
4108 2616 Pls
4116 2450 Pls
4124 2735 Pls
4131 2845 Pls
4162 2949 Pls
4170 3028 Pls
4177 3234 Pls
4185 3169 Pls
4208 3018 Pls
4216 3197 Pls
4224 3136 Pls
4231 3130 Pls
4239 2880 Pls
4262 2944 Pls
4270 2839 Pls
4277 2797 Pls
4285 2931 Pls
4293 3070 Pls
4316 3251 Pls
4323 3275 Pls
4331 3208 Pls
4339 3234 Pls
4346 3093 Pls
4369 3303 Pls
4377 3398 Pls
4385 3253 Pls
4392 3275 Pls
4400 3167 Pls
4431 3244 Pls
4439 3316 Pls
4446 3286 Pls
4454 3141 Pls
4477 3227 Pls
4485 3268 Pls
4492 3735 Pls
4500 3488 Pls
4508 3666 Pls
4531 3597 Pls
4538 3514 Pls
4546 3488 Pls
4554 3495 Pls
4561 3599 Pls
4584 3467 Pls
4592 3257 Pls
4600 3316 Pls
4607 3475 Pls
4615 3577 Pls
4638 3517 Pls
4646 3873 Pls
4653 4149 Pls
4661 4063 Pls
4669 3985 Pls
4692 4011 Pls
4700 3998 Pls
4707 3903 Pls
4715 3599 Pls
4723 3899 Pls
4745 3825 Pls
4753 3646 Pls
4761 3737 Pls
4768 3583 Pls
4776 3778 Pls
4799 3577 Pls
4807 3411 Pls
4814 3108 Pls
4822 3244 Pls
4830 3186 Pls
4853 3543 Pls
4860 3633 Pls
4868 3462 Pls
4876 3394 Pls
4907 3443 Pls
4914 3676 Pls
4922 3467 Pls
4930 3629 Pls
4937 3549 Pls
4960 3557 Pls
4968 3365 Pls
4976 3281 Pls
4983 3150 Pls
4991 3223 Pls
5014 3134 Pls
5022 2994 Pls
5029 2812 Pls
5037 2916 Pls
5045 3059 Pls
5068 2862 Pls
5075 3001 Pls
5083 2873 Pls
5091 2854 Pls
5098 2653 Pls
5121 2532 Pls
5129 2409 Pls
5137 2465 Pls
5145 2453 Pls
5152 2426 Pls
5183 2461 Pls
5191 2355 Pls
5198 2508 Pls
5206 2610 Pls
5229 2573 Pls
5237 2620 Pls
5244 2730 Pls
5252 2677 Pls
5260 2705 Pls
5283 2569 Pls
5290 2668 Pls
5298 2547 Pls
5306 2605 Pls
5313 2569 Pls
5336 2731 Pls
5344 2869 Pls
5352 1510 Pls
5359 1454 Pls
5367 1392 Pls
5390 1465 Pls
5398 1394 Pls
5406 1474 Pls
5413 1379 Pls
5421 1413 Pls
5444 1441 Pls
5459 1390 Pls
5467 1396 Pls
5475 1474 Pls
5498 1554 Pls
5505 1549 Pls
5513 1606 Pls
5521 1536 Pls
5528 1571 Pls
5551 1590 Pls
5559 1558 Pls
5567 1422 Pls
5574 1495 Pls
5582 1448 Pls
5605 1303 Pls
5613 1344 Pls
5620 1344 Pls
5628 1402 Pls
5636 1292 Pls
5659 1366 Pls
5667 1322 Pls
5674 1260 Pls
5682 1282 Pls
5690 1264 Pls
5713 1281 Pls
5720 1245 Pls
5728 1268 Pls
5736 1269 Pls
5743 1273 Pls
5766 1254 Pls
5774 1243 Pls
5782 1297 Pls
5789 1385 Pls
5797 1342 Pls
5820 1357 Pls
5828 1392 Pls
5835 1471 Pls
5843 1525 Pls
5851 1545 Pls
5874 1582 Pls
5882 1616 Pls
5889 1625 Pls
5897 1668 Pls
5905 1742 Pls
5935 1713 Pls
5943 1593 Pls
5951 1700 Pls
5958 1606 Pls
5981 1593 Pls
5989 1573 Pls
5997 1580 Pls
6004 1547 Pls
6012 1498 Pls
6035 1660 Pls
6043 1638 Pls
6050 1672 Pls
6058 1541 Pls
6066 1407 Pls
6089 1446 Pls
6096 1385 Pls
6104 1310 Pls
6112 1446 Pls
6120 1387 Pls
6143 1297 Pls
6150 1182 Pls
6158 1260 Pls
6166 1167 Pls
6173 1174 Pls
6196 1148 Pls
6204 1096 Pls
6212 1022 Pls
6219 1044 Pls
6227 1167 Pls
6250 1133 Pls
6258 1051 Pls
6265 1051 Pls
6273 981 Pls
6281 1014 Pls
6304 1066 Pls
6311 977 Pls
6319 955 Pls
6327 955 Pls
6334 958 Pls
6358 1003 Pls
6366 1018 Pls
6373 1074 Pls
6381 1182 Pls
6389 1178 Pls
6412 1130 Pls
6419 1122 Pls
6427 1048 Pls
6435 1055 Pls
6442 988 Pls
6465 1007 Pls
6473 1059 Pls
6481 1037 Pls
6488 984 Pls
6496 955 Pls
6519 981 Pls
6527 973 Pls
6534 955 Pls
6550 1003 Pls
6573 966 Pls
6580 927 Pls
6588 899 Pls
6596 835 Pls
6604 869 Pls
6627 847 Pls
6634 865 Pls
6642 705 Pls
6650 705 Pls
6657 750 Pls
6680 757 Pls
6688 768 Pls
6696 746 Pls
6703 712 Pls
6711 690 Pls
6734 701 Pls
6742 686 Pls
6749 709 Pls
6757 690 Pls
6765 746 Pls
6795 727 Pls
6803 735 Pls
6811 735 Pls
6818 739 Pls
6622 4487 Pls
1.000 UL
LTb
770 4620 N
770 448 L
6220 0 V
0 4172 V
-6220 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
